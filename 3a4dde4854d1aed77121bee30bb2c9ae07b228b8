{
  "comments": [
    {
      "key": {
        "uuid": "3217c661_ba1e01f8",
        "filename": "handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-03-03T23:27:07Z",
      "side": 1,
      "message": "You should use MTDINFO instead of sysfs\n```\n    mtd_info_t info;\n    fd.ioctl(MEMGETINFO, \u0026info);\n    return info.size;\n```",
      "revId": "3a4dde4854d1aed77121bee30bb2c9ae07b228b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19b9b3e2_513758b1",
        "filename": "handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-04T01:31:31Z",
      "side": 1,
      "message": "I could get what you have to work exactly, I tried it with..\n```\nmtd_info_t info;\nioctl(0, MEMGETINFO, \u0026info);\nreturn info.size;\n```\n\nand got \n\n```\nExpected: is equal to \u0027 \u0027 (32, 0x20)\n  Actual: \u0027h\u0027 (104, 0x68) (of type unsigned char)\n```\n\nIt doesn\u0027t look right. should be 32(MB) but got 104.\n\nNote: I am return uint8_t now, maybe that message up somethings. size is `uint32_t`, but  that still does not match. It should still be power of 2.",
      "parentUuid": "3217c661_ba1e01f8",
      "revId": "3a4dde4854d1aed77121bee30bb2c9ae07b228b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe62f2f0_275c2b08",
        "filename": "handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-03-04T01:34:43Z",
      "side": 1,
      "message": "You need to give it a valid file descriptor for the ioctl call and check return values.\n\nYou need to use a larger type to return bytes, or shift the output to make it fit. I don\u0027t think we will have flash sides larger than 128, but who knows. You should probably just return a 32bit uint of bytes (or uint16 of megabytes).",
      "parentUuid": "19b9b3e2_513758b1",
      "revId": "3a4dde4854d1aed77121bee30bb2c9ae07b228b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ff3d438_c5230fbd",
        "filename": "handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-03-04T02:07:40Z",
      "side": 1,
      "message": "oh yeah, 0 is stdin (I think).\n\nI can\u0027t find the file descriptor for mtd0.\n\n```\nroot@fdsv640-nfd:~# lsof | grep mtd\n334     /usr/bin/havend /dev/mtd3\n```\nor\n```\nroot@arcadia-milan:~# lsof  | grep mtd\n356     /usr/bin/havend /dev/mtd7\n```\n\nI can only find the havend, and they are different fd. These are two different machine/images 64MB vs 32MB. mtd3 vs. mtd7.",
      "parentUuid": "fe62f2f0_275c2b08",
      "revId": "3a4dde4854d1aed77121bee30bb2c9ae07b228b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a69b9632_b2ddaf7e",
        "filename": "handler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-03-04T18:27:54Z",
      "side": 1,
      "message": "You just\n```\nfd \u003d open(\"/dev/mtd0\", O_RDONLY);\nmtd_info_t info;\nioctl(fd, MEMGETINFO, \u0026info);\nclose(fd);\n```",
      "parentUuid": "7ff3d438_c5230fbd",
      "revId": "3a4dde4854d1aed77121bee30bb2c9ae07b228b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}