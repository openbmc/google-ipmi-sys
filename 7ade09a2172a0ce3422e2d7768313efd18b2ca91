{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "472726ba_33e67cd0",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 51,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "for these structs? do you not need in the unit tests to confirm the size of the response?\n\nHow some this is different from what the test uses?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d997b16d_f6016c8d",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 51,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2021-11-18T19:45:45Z",
      "side": 1,
      "message": "The unit test does verify the size, e.g. on line 58: ```ASSERT_EQ(reply_buff.size(), sizeof(Reply));```\n\n\u003e How some this is different from what the test uses?\n\nThe test includes the entire Reply struct specific to that case. For calls without variable size fields (e.g. DeviceCount, as opposed to Read or Write) this isn\u0027t very interesting but it makes the test extremely easy to read and follows a common format with the other, more complicated test cases.",
      "parentUuid": "472726ba_33e67cd0",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15df4795_f4d109b3",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "where did this one come from?",
      "range": {
        "startLine": 127,
        "startChar": 57,
        "endLine": 127,
        "endChar": 59
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f017c79f_d1001d0d",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2021-11-18T19:45:45Z",
      "side": 1,
      "message": "The trailing NULL for the c-string. This isn\u0027t strictly necessary, but it makes using these replies easier.\n\nThe documented API says that trailing NULL terminators are optional for input arguments, and will be included in generated return values.",
      "parentUuid": "15df4795_f4d109b3",
      "range": {
        "startLine": 127,
        "startChar": 57,
        "endLine": 127,
        "endChar": 59
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61ffbe30_08bfd9c9",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 193,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "rm?",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 193,
        "endChar": 40
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7758647a_f59d177f",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 193,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2021-11-18T19:45:45Z",
      "side": 1,
      "message": "No. These are actually part of the expected struct, but because name is variable length I need to break it into 2 pieces. These fields get handled by the ReadNameHeader method and this represents what\u0027s left of the Request.\n\nAdded some comments to clarify",
      "parentUuid": "61ffbe30_08bfd9c9",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 193,
        "endChar": 40
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb618c12_467b8b96",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 209,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "no need",
      "range": {
        "startLine": 209,
        "startChar": 20,
        "endLine": 209,
        "endChar": 22
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83a636de_e5ef1e7b",
        "filename": "google_accel_oob.cpp",
        "patchSetId": 12
      },
      "lineNbr": 209,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2021-11-18T19:45:45Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "cb618c12_467b8b96",
      "range": {
        "startLine": 209,
        "startChar": 20,
        "endLine": 209,
        "endChar": 22
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "316550f3_f1202b53",
        "filename": "handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 484,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "prefer `static_cast\u003cuint64_t\u003e`",
      "range": {
        "startLine": 484,
        "startChar": 27,
        "endLine": 484,
        "endChar": 37
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec88ebc6_af802dbe",
        "filename": "handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 484,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2022-01-04T17:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "316550f3_f1202b53",
      "range": {
        "startLine": 484,
        "startChar": 27,
        "endLine": 484,
        "endChar": 37
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce1e736e_59e35e9c",
        "filename": "handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 550,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "just `ACCEL_OOB_ROOT + name`? same with the others",
      "range": {
        "startLine": 548,
        "startChar": 4,
        "endLine": 550,
        "endChar": 0
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd8f0556_d0434fe1",
        "filename": "handler.cpp",
        "patchSetId": 12
      },
      "lineNbr": 550,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2022-01-04T17:18:51Z",
      "side": 1,
      "message": "Unfortunately, there isn\u0027t an operator+(string_view, string_view).",
      "parentUuid": "ce1e736e_59e35e9c",
      "range": {
        "startLine": 548,
        "startChar": 4,
        "endLine": 550,
        "endChar": 0
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "020fed8b_c5f7c24f",
        "filename": "test/google_accel_oob_unittest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 41,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T18:56:05Z",
      "side": 1,
      "message": "if we put the struct in the header, then we don\u0027t have to maintain two of these.",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 41,
        "endChar": 30
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6db0a862_d97d70bb",
        "filename": "test/google_accel_oob_unittest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 41,
      "author": {
        "id": 1000923
      },
      "writtenOn": "2022-01-04T17:18:51Z",
      "side": 1,
      "message": "That was how I originally had it, but it doesn\u0027t work for the commands with variable-sized structs (containing the name). For consistency, I kept the fixed-size methods the same.",
      "parentUuid": "020fed8b_c5f7c24f",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 41,
        "endChar": 30
      },
      "revId": "7ade09a2172a0ce3422e2d7768313efd18b2ca91",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}