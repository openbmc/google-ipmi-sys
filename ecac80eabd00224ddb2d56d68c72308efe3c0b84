{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b8413d_3a91e141",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "```\n#include \u003cstdplus/print.hpp\u003e\nstdplus::print()\n```\n\nsame with the others.",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba027dce_f24c8bd0",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "`invalidArg` instead?",
      "range": {
        "startLine": 57,
        "startChar": 23,
        "endLine": 57,
        "endChar": 45
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31a1d199_f2cf1b56",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2023-10-20T14:34:31Z",
      "side": 1,
      "message": "I didn\u0027t see `invalidArg` in https://github1s.com/openbmc/phosphor-host-ipmid/blob/master/include/ipmid/api-types.hpp#L457-L553\nDo you have a pointer to that error type?\n\nHowever I found `responseInvalidFieldRequest` there which might fit my case.",
      "parentUuid": "ba027dce_f24c8bd0",
      "range": {
        "startLine": 57,
        "startChar": 23,
        "endLine": 57,
        "endChar": 45
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abdd3a62_eb0c557d",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "`uint64`?",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 11
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0451f02d_676f3ee4",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2023-10-20T14:34:31Z",
      "side": 1,
      "message": "`int64_t` is correct.\nDefinition is here https://gbmc.googlesource.com/BootTimeMonitor/+/refs/heads/master/yaml/xyz/openbmc_project/Time/Boot/Duration.interface.yaml#14",
      "parentUuid": "abdd3a62_eb0c557d",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 11
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "957b9e4a_a7d7c1e6",
        "filename": "handler.cpp",
        "patchSetId": 5
      },
      "lineNbr": 713,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "pass `::ipmi::Context::ptr ctx` and use that to make the dbus call instead?\n\nExample in https://gerrit.openbmc.org/c/openbmc/google-ipmi-sys/+/47712/52/bifurcation/bifurcation_dynamic.cpp\n\nin this case it would be\n\n```\n        boost::system::error_code ec;\n        ctx-\u003ebus-\u003eyield_method_call(\n            ctx-\u003eyield, ec, BTMONITOR_SERVICE,\n            BTMONITOR_SERVICE,\n            BTMONITOR_CHECKPOINT_INTERFACE, \"BTMONITOR_SETCHECKPOINT,\n            name, wallTime, duration);\n```",
      "range": {
        "startLine": 713,
        "startChar": 14,
        "endLine": 713,
        "endChar": 34
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2f4175a_25cf01fb",
        "filename": "handler.cpp",
        "patchSetId": 5
      },
      "lineNbr": 713,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2023-10-20T14:34:31Z",
      "side": 1,
      "message": "My unittest https://gerrit.openbmc.org/c/openbmc/google-ipmi-sys/+/66345/5/test/handler_unittest.cpp#655 needs to get a mock dbus which was done by `getDbus` https://github.com/openbmc/google-ipmi-sys/blob/master/test/handler_unittest.cpp#L149-L153\n\nI am thinking how to mock dbus if I directly get it from `ctx-\u003ebus`",
      "parentUuid": "957b9e4a_a7d7c1e6",
      "range": {
        "startLine": 713,
        "startChar": 14,
        "endLine": 713,
        "endChar": 34
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6067a62f_c6ca910e",
        "filename": "handler_impl.hpp",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "does any of these needs to be `int64_t`?",
      "range": {
        "startLine": 78,
        "startChar": 53,
        "endLine": 78,
        "endChar": 60
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9f57f3e_b587dba9",
        "filename": "handler_impl.hpp",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2023-10-20T14:34:31Z",
      "side": 1,
      "message": "Quote from https://www.freedesktop.org/wiki/Software/systemd/dbus/\n\n\u003e Note that as monotonic time begins with the kernel startup the KernelTimestampMonotonic timestamp will always be 0, and FirmwareTimestampMonotonic and LoaderTimestampMonotonic are to be read as negative values.\n\nBy this reason I designed all the timestamp and duration as signed integer in the beginning.",
      "parentUuid": "6067a62f_c6ca910e",
      "range": {
        "startLine": 78,
        "startChar": 53,
        "endLine": 78,
        "endChar": 60
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}