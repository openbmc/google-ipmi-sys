{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b8413d_3a91e141",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "```\n#include \u003cstdplus/print.hpp\u003e\nstdplus::print()\n```\n\nsame with the others.",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba027dce_f24c8bd0",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "`invalidArg` instead?",
      "range": {
        "startLine": 57,
        "startChar": 23,
        "endLine": 57,
        "endChar": 45
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abdd3a62_eb0c557d",
        "filename": "boot_time_monitor.cpp",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "`uint64`?",
      "range": {
        "startLine": 117,
        "startChar": 4,
        "endLine": 117,
        "endChar": 11
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "957b9e4a_a7d7c1e6",
        "filename": "handler.cpp",
        "patchSetId": 5
      },
      "lineNbr": 713,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "pass `::ipmi::Context::ptr ctx` and use that to make the dbus call instead?\n\nExample in https://gerrit.openbmc.org/c/openbmc/google-ipmi-sys/+/47712/52/bifurcation/bifurcation_dynamic.cpp\n\nin this case it would be\n\n```\n        boost::system::error_code ec;\n        ctx-\u003ebus-\u003eyield_method_call(\n            ctx-\u003eyield, ec, BTMONITOR_SERVICE,\n            BTMONITOR_SERVICE,\n            BTMONITOR_CHECKPOINT_INTERFACE, \"BTMONITOR_SETCHECKPOINT,\n            name, wallTime, duration);\n```",
      "range": {
        "startLine": 713,
        "startChar": 14,
        "endLine": 713,
        "endChar": 34
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6067a62f_c6ca910e",
        "filename": "handler_impl.hpp",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-10-18T16:17:26Z",
      "side": 1,
      "message": "does any of these needs to be `int64_t`?",
      "range": {
        "startLine": 78,
        "startChar": 53,
        "endLine": 78,
        "endChar": 60
      },
      "revId": "ecac80eabd00224ddb2d56d68c72308efe3c0b84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}